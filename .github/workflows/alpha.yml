name: Zen Alpha builds

on:
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release for this build'
        required: false
        default: false
        type: 'boolean'
      update_version:
        description: 'Update the version number'
        required: false
        default: true
        type: 'boolean'

jobs:

  build-data:
    permissions:
      contents: write
    name: Generate build data
    runs-on: ubuntu-latest
    outputs:
      build_date: ${{ steps.data.outputs.builddate }}
      version: ${{ steps.data.outputs.version }}
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.DEPLOY_KEY }}
          
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: pnpm install

      - name: Setup Surfer
        run: |
          npm i -g @zen-browser/surfer

      - name: Bump version
        if: ${{ github.event.inputs.update_version == 'true' }}
        run: |
          pnpm surfer ci --brand alpha --bump prerelease

      - name: Bump version without new version
        if: ${{ github.event.inputs.update_version == 'false' }}
        run: |
          pnpm surfer ci --brand alpha

      - name: Debug
        run: |
          surfer get version
          surfer get version | xargs
          echo "$(surfer get version | xargs)"

      - name: Export release date
        id: data
        shell: bash
        run: |
          echo "builddate=$(date +"%Y-%m-%d")" >> $GITHUB_OUTPUT
          echo "version=$(surfer get version | xargs)" >> $GITHUB_OUTPUT

      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.event.inputs.update_version == 'true' }}
        with:
          commit_message: ðŸ”– Update version to ${{ steps.data.outputs.version }}
          commit_user_name: Zen Browser Robot
          commit_user_email: zen-browser-bot@users.noreply.github.com


  prepare-flatpak:
    permissions: write-all
    name: Release Flatpak
    needs: [build-data]
    runs-on: ubuntu-latest

    steps:
      - name: Clone flatpak repo
        uses: actions/checkout@v4
        with:
          repository: zen-browser/release-utils
          token: ${{ secrets.DEPLOY_KEY }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          npm install

      - name: Generate new flatpak release
        run: |
          npm run build-flatpak \
            --version ${{ needs.build-data.outputs.version }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ðŸš€ Update releases for flatpak
          commit_user_name: Zen Browser Robot
          commit_user_email: zen-browser-bot@users.noreply.github.com

      - name: Clone flatpak repo
        uses: actions/checkout@v4
        with:
          repository: zen-browser/flatpak
          token: ${{ secrets.DEPLOY_KEY }}

      - name: Move releases.xml
        run: |
          pwd
          ls .
          ls ..
          mv releases.xml ./flatpak/io.github.zen_browser.zen.metainfo.xml

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: '[release]: Update flatpak manifest'
          commit_user_name: Zen Browser Robot
          commit_user_email: zen-browser-bot@users.noreply.github.com
          repository: ./flatpak

  release-flatpak:
    permissions: write-all
    name: Release Flatpak
    needs: [prepare-flatpak]
    runs-on: ubuntu-latest

    steps:
      - name: Clone flatpak repo
        uses: actions/checkout@v4
        with:
          repository: flathub/io.github.zen_browser.zen
          token: ${{ secrets.DEPLOY_KEY }}

      - name: Download linux generic build
        uses: actions/download-artifact@v4
        with:
          name: zen.linux-generic.tar.bz2

      - name: Update repo
        uses: actions/checkout@v4
        with:
          path: zen-browser
          token: ${{ secrets.DEPLOY_KEY }}

      - name: Download flatpak archive
        run: |
          wget https://github.com/zen-browser/flatpak/releases/latest/download/archive.tar -O archive.tar

      - name: Setup git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Prepare flatpak manifest
        run: |
          python3 ./zen-browser/scripts/prepare-flatpak-release.py \
            --flatpak-archive archive.tar \
            --version ${{ needs.build-data.outputs.version }} \
            --linux-archive zen.linux-generic.tar.bz2 \
            --output io.github.zen_browser.zen.yml \
            --template-root ./zen-browser/flatpak

      - name: Commit changes
        run: |
          git add io.github.zen_browser.zen.yml
          git commit -m "Update to version ${{ needs.build-data.outputs.version }}"

      - name: Clean up
        run: |
          rm -rf zen-browser
          rm -rf archive.tar
          rm -rf zen.linux-generic.tar.bz2

      - name: Upload flatpak manifest
        uses: actions/upload-artifact@v4
        with:
          name: io.github.zen_browser.zen.yml
          path: ./io.github.zen_browser.zen.yml

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        env:
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1
        with:
          token: ${{ secrets.DEPLOY_KEY }}
          commit-message: ðŸš€ Update to version ${{ needs.build-data.outputs.version }}
          title: ðŸš€ Update to version ${{ needs.build-data.outputs.version }}
          body: |
            This PR updates the Zen Browser Flatpak package to version ${{ needs.build-data.outputs.version }}. 
            
            @${{ github.actor }} please review and merge this PR.
          branch: update-to-${{ needs.build-data.outputs.version }}
          base: master
          git-token: ${{ secrets.DEPLOY_KEY }}
          delete-branch: true
          

